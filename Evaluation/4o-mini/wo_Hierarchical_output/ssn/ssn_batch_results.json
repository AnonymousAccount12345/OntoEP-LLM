{"0": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I will finalize the property restrictions for the class `ActuatableProperty`. \n\nThe key points from the class definition indicate that an `ActuatableProperty` is a characteristic of a system that can be influenced or modified through specific actions, which supports the idea that it acts on properties. \n\nGiven that the candidates provided are somewhat redundant, I will consolidate them into a single, clear restriction. The restriction will indicate that an `ActuatableProperty` can act on some `Property`, which aligns with the definition provided.\n\nHere are the finalized property restrictions in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nActuatableProperty,actsOnProperty,some,Property\n```\n\nThis single restriction captures the essence of the relationship between `ActuatableProperty` and `Property` as described in the support text.", "1": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized ontology property restrictions in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nActuation,actsOnProperty,some,ActuatableProperty\nActuation,hasProperty,some,ActuatableProperty\nActuation,hasFeatureOfInterest,some,FeatureOfInterest\nActuation,hasResult,some,Result\nActuation,usedProcedure,some,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **Actuation, actsOnProperty, some, ActuatableProperty**: This restriction is retained as it directly reflects the definition of actuation, which involves influencing an actuatable property.\n  \n2. **Actuation, hasProperty, some, ActuatableProperty**: This restriction is added to emphasize that actuation is associated with properties that can be acted upon.\n\n3. **Actuation, hasFeatureOfInterest, some, FeatureOfInterest**: This restriction is included to highlight the importance of the feature of interest in the actuation process.\n\n4. **Actuation, hasResult, some, Result**: This restriction is maintained to indicate that each actuation yields a specific result.\n\n5. **Actuation, usedProcedure, some, Procedure**: This restriction is included to reflect that actuation is guided by a defined procedure. \n\nThe other candidates were either duplicates or less relevant based on the definitions provided.", "2": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Actuator class in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nActuator,actsOnProperty,some,ActuatableProperty\nActuator,hasProperty,some,ActuatableProperty\nActuator,hasResult,some,Result\n```\n\n### Explanation:\n1. **Actuator, actsOnProperty, some, ActuatableProperty**: This restriction indicates that an Actuator can act on some ActuatableProperties, which aligns with the definition that it influences specific properties.\n  \n2. **Actuator, hasProperty, some, ActuatableProperty**: This restriction suggests that an Actuator has some properties that are Actuatable, reinforcing the idea that it is associated with properties it can influence.\n\n3. **Actuator, hasResult, some, Result**: This restriction indicates that an Actuator produces some results, which is consistent with its role in the operational dynamics of a system. \n\nThe other candidates were either duplicates or did not add new information, so they were omitted for clarity and conciseness.", "3": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,rtype,object\nAgent,actsOnProperty,some,Property\nAgent,hasProperty,some,Property\nAgent,deployedOnPlatform,some,Platform\nAgent,hasFeatureOfInterest,some,FeatureOfInterest\nAgent,hasInput,some,Input\nAgent,hasOutput,some,Output\nAgent,hasResult,some,Result\nAgent,hasSubSystem,some,System\nAgent,implementedBy,some,System\nAgent,isActedOnBy,some,Actuator\nAgent,isProxyFor,some,System\nAgent,madeActuation,some,Actuation\nAgent,madeObservation,some,Observation\nAgent,observes,some,Observation\nAgent,madeSampling,some,Sampling\nAgent,observes,some,ObservableProperty\n```\n\n### Explanation of Final Restrictions:\n1. **actsOnProperty**: Agents can act on various properties, which aligns with their role in a system.\n2. **hasProperty**: Agents can possess properties relevant to their function.\n3. **deployedOnPlatform**: Agents can be deployed on specific platforms, as suggested by the architecture of a semantic sensor network.\n4. **hasFeatureOfInterest**: Agents may have features of interest that they interact with.\n5. **hasInput**: Agents can have inputs that influence their actions.\n6. **hasOutput**: Agents produce outputs based on their interactions.\n7. **hasResult**: Agents can lead to results based on their interactions with the environment.\n8. **hasSubSystem**: Agents may have subsystems associated with them, contributing to the overall functionality.\n9. **implementedBy**: Agents can be implemented by various systems.\n10. **isActedOnBy**: Agents can be acted upon by actuators in the system.\n11. **isProxyFor**: Agents can act as proxies for various systems.\n12. **madeActuation**: Agents can make actuations in response to stimuli.\n13. **madeObservation**: Agents can create observations based on their interactions.\n14. **observes**: Agents can observe their environment, leading to the creation of observations.\n15. **madeSampling**: Agents can perform sampling as part of their operations.\n16. **observes**: Agents can observe properties of their environment.\n\nThis set of restrictions captures the essential capabilities and roles of agents within the context of a semantic sensor network.", "4": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined and finalized the property restrictions for the Deployment class. The restrictions emphasize the relationships between Deployment, Property, Platform, FeatureOfInterest, and System, ensuring they align with the definitions and support texts.\n\nHere are the final property restrictions in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nDeployment,actsOnProperty,some,Property\nDeployment,hasProperty,some,Property\nDeployment,deployedOnPlatform,some,Platform\nDeployment,hasFeatureOfInterest,some,FeatureOfInterest\nDeployment,hosts,some,System\n```\n\n### Explanation of the Final Property Restrictions:\n1. **actsOnProperty**: Indicates that a Deployment is associated with some Property, aligning with the definition that each deployment is tailored to a particular property.\n2. **hasProperty**: Similar to actsOnProperty, this restriction emphasizes that a Deployment has some Property, reinforcing the tailored nature of the deployment.\n3. **deployedOnPlatform**: Specifies that a Deployment is deployed on some Platform, reflecting the class definition that highlights the arrangement of systems on designated platforms.\n4. **hasFeatureOfInterest**: Indicates that a Deployment has some FeatureOfInterest, which is relevant to understanding the functional outcomes in a sensor network.\n5. **hosts**: States that a Deployment hosts some System, which is crucial for understanding the relationship between the deployment and the systems it encompasses.\n\nThese restrictions provide a clear and structured representation of the Deployment class within the ontology, ensuring that they are consistent with the provided definitions and support texts.", "5": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the `FeatureOfInterest` class in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nFeatureOfInterest,hasSample,only,Sample\nFeatureOfInterest,hasProperty,some,Property\nFeatureOfInterest,hasResult,only,Sample\n```\n\n### Explanation of Final Property Restrictions:\n1. **FeatureOfInterest, hasSample, only, Sample**: This restriction is retained as it aligns with the definition that each Feature of Interest is exclusively linked to a specific sample.\n  \n2. **FeatureOfInterest, hasProperty, some, Property**: This restriction is included to indicate that a Feature of Interest can have some properties that describe its characteristics and behaviors.\n\n3. **FeatureOfInterest, hasResult, only, Sample**: This restriction is added to indicate that the results associated with a Feature of Interest are also exclusively linked to samples, reinforcing the connection between the feature and the data it represents. \n\nThe other candidates were either duplicates or less relevant based on the definitions provided.", "6": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the `ObservableProperty` class in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nObservableProperty,hasFeatureOfInterest,some,FeatureOfInterest\nObservableProperty,hasResult,some,Result\nObservableProperty,observes,some,Sensor\nObservableProperty,observes,only,Sensor\nObservableProperty,hasResult,only,Result\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: This restriction indicates that an `ObservableProperty` must have at least one `FeatureOfInterest`, which aligns with the definition that it is a characteristic of a feature.\n  \n2. **hasResult**: This restriction indicates that an `ObservableProperty` must have at least one `Result`, which is consistent with the idea that observable properties provide measurable outcomes.\n\n3. **observes**: This restriction indicates that an `ObservableProperty` must be observed by at least one `Sensor`, which is crucial since sensors are responsible for monitoring these properties.\n\n4. **observes (only)**: This restriction specifies that the only entities that can observe an `ObservableProperty` are `Sensor` instances, reinforcing the link between observable properties and sensors.\n\n5. **hasResult (only)**: This restriction specifies that the only results associated with an `ObservableProperty` are of type `Result`, ensuring clarity in the relationship between observable properties and their measurable outcomes. \n\nThese restrictions are designed to accurately reflect the relationships and constraints inherent in the definitions and the context provided.", "7": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,rtype,object\nObservation,hasFeatureOfInterest,some,FeatureOfInterest\nObservation,hasResult,some,Result\nObservation,madeBySensor,some,Sensor\nObservation,observes,some,ObservableProperty\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: The restriction is set to \"some\" because the definition states that each observation focuses on a particular feature of interest.\n2. **hasResult**: This is also set to \"some\" as each observation is associated with a unique result.\n3. **madeBySensor**: The restriction is set to \"some\" since the definition specifies that observations are conducted by sensors.\n4. **observes**: This is set to \"some\" because observations are linked to specific observable properties.\n\nThe other candidates that suggested \"only\" were not included as they imply exclusivity, which is not supported by the provided class definition. The duplicates in the candidates were consolidated into single entries for clarity.", "8": "Based on the class hierarchy, class definitions, and the provided property restriction candidates, here are the finalized property restrictions for the Output class in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nOutput,hasInput,some,Input\nOutput,hasResult,some,Result\nOutput,isResultOf,some,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **Output, hasInput, some, Input**: This restriction is retained as it accurately reflects that outputs are generated in response to some input.\n2. **Output, hasResult, some, Result**: This restriction is also retained, indicating that outputs are results produced by the system's processes.\n3. **Output, isResultOf, some, Procedure**: This restriction is included to denote that outputs can be the result of some procedures, aligning with the definition of the Output class. \n\nThe other candidates were either duplicates or overly restrictive (e.g., using \"only\"), which may not accurately represent the relationships within the ontology.", "9": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the class \"Platform.\" The final restrictions are as follows:\n\n```csv\nsubject,predicate,rtype,object\nPlatform,hasDeployment,some,Deployment\nPlatform,hosts,only,System\nPlatform,hasSubSystem,some,System\n```\n\n### Explanation of Final Property Restrictions:\n1. **Platform, hasDeployment, some, Deployment**: This restriction indicates that a Platform must have at least one Deployment associated with it, which aligns with the definition that a Platform is always associated with a deployment context.\n\n2. **Platform, hosts, only, System**: This restriction specifies that a Platform exclusively hosts Systems, reflecting the definition that a Platform integrates various systems and ensures compatibility.\n\n3. **Platform, hasSubSystem, some, System**: This restriction indicates that a Platform can have some Systems as subsystems, which is consistent with the idea that a Platform supports and integrates various systems.\n\nThe other candidates were either redundant or less precise in capturing the essential characteristics of the Platform class as described in the class definition.", "10": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Procedure\" in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nProcedure,hasInput,some,Input\nProcedure,hasOutput,some,Output\nProcedure,implementedBy,some,System\nProcedure,hasSubSystem,some,System\n```\n\n### Explanation of Final Property Restrictions:\n1. **Procedure, hasInput, some, Input**: This restriction is retained as it aligns with the definition of a Procedure, which relies on defined inputs.\n  \n2. **Procedure, hasOutput, some, Output**: This restriction is also retained since a Procedure is characterized by its outputs.\n\n3. **Procedure, implementedBy, some, System**: This restriction is included because the definition specifies that a Procedure is executed by a designated system.\n\n4. **Procedure, hasSubSystem, some, System**: This restriction is added to indicate that a Procedure may involve subsystems, which is consistent with the structured nature of Procedures.\n\nThe other candidates were either duplicates or overly restrictive (e.g., using \"only\" instead of \"some\"), which could limit the expressiveness of the ontology.", "11": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and support text:\n\n```csv\nsubject,predicate,rtype,object\nProperty,hasFeatureOfInterest,some,FeatureOfInterest\nProperty,hasResult,some,Result\nProperty,isPropertyOf,some,Thing\nProperty,isProxyFor,some,Thing\n```\n\n### Explanation of Final Restrictions:\n1. **Property, hasFeatureOfInterest, some, FeatureOfInterest**: This restriction is maintained as it aligns with the definition that properties are tied to specific features of interest.\n  \n2. **Property, hasResult, some, Result**: This restriction is included to indicate that properties can have associated results, which is supported by the text.\n\n3. **Property, isPropertyOf, some, Thing**: This restriction is kept to reflect that properties can be associated with various entities (Things).\n\n4. **Property, isProxyFor, some, Thing**: This restriction is included to allow for the possibility that properties can act as proxies for other entities, which is consistent with the foundational role of properties in the ontology.\n\n### Removed Restrictions:\n- Duplicates and overly restrictive definitions (like \"only\") were removed to simplify the ontology and ensure clarity.", "12": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Result class in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nResult,hasFeatureOfInterest,some,FeatureOfInterest\nResult,isResultOf,some,Observation\nResult,observedProperty,some,ObservableProperty\nResult,hasProperty,some,ObservableProperty\n```\n\n### Explanation of Final Property Restrictions:\n1. **Result, hasFeatureOfInterest, some, FeatureOfInterest**: This restriction is retained as it aligns with the definition of the Result class, indicating that results are linked to features of interest.\n\n2. **Result, isResultOf, some, Observation**: This restriction is included because results are outcomes derived from observations, which is a key aspect of the Result class.\n\n3. **Result, observedProperty, some, ObservableProperty**: This restriction is included to reflect that results often relate to observable properties, which are essential for understanding the implications of sensor readings.\n\n4. **Result, hasProperty, some, ObservableProperty**: This restriction is added to indicate that results can have properties that are observable, further emphasizing the connection between results and observable properties. \n\nThe other candidates were either duplicates or did not add new information that was not already covered by the selected restrictions.", "13": "Here are the finalized property restrictions in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nSample,actsOnProperty,some,Property\nSample,hasProperty,some,Property\nSample,forProperty,some,Property\nSample,hasFeatureOfInterest,some,FeatureOfInterest\nSample,hasInput,some,Input\nSample,hasOutput,some,Output\nSample,hasResult,some,Result\nSample,isObservedBy,some,Sensor\nSample,isResultOf,some,Sampling\nSample,madeBySampler,some,Sampler\nSample,madeByActuator,some,Actuator\nSample,madeBySensor,some,Sensor\nSample,madeObservation,some,Observation\nSample,observes,some,Observation\nSample,isSampleOf,some,FeatureOfInterest\nSample,isProxyFor,some,FeatureOfInterest\nSample,madeSampling,some,Thing\nSample,madeActuation,some,Thing\nSample,madeObservation,some,Thing\nSample,hasSubSystem,some,Thing\nSample,isActedOnBy,some,Actuator\n```\n\n### Explanation of Changes:\n1. **Consolidation of Redundant Restrictions**: Many of the original candidates were duplicates or very similar. I consolidated them to ensure each unique restriction is represented only once.\n2. **Focus on Relevant Properties**: I ensured that only the most relevant properties were included based on the class definition and support text.\n3. **Removed Redundant Restrictions**: Some restrictions that were overly specific (like \"only\") were omitted in favor of more general restrictions that still capture the necessary relationships.\n4. **Maintained Context**: The restrictions reflect the context of the Sample as described in the class definition, ensuring they align with the intended meaning of the ontology.", "14": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Sampler\" in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nSampler,hasFeatureOfInterest,some,FeatureOfInterest\nSampler,hasResult,some,Result\nSampler,madeSampling,some,Sampling\nSampler,usedProcedure,some,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: The restriction is kept as \"some\" because a Sampler must have at least one feature of interest from which it collects data.\n  \n2. **hasResult**: The restriction is also \"some\" because a Sampler produces results related to its sampling activities, indicating that it must have at least one result.\n\n3. **madeSampling**: This restriction is kept as \"some\" to indicate that a Sampler engages in sampling activities.\n\n4. **usedProcedure**: The restriction is maintained as \"some\" to reflect that a Sampler uses specific procedures for its operations.\n\n### Removed Candidates:\n- Duplicates and unnecessary restrictions (like \"only\" restrictions) were removed to streamline the ontology and ensure clarity in the relationships defined. The \"only\" restrictions were deemed too restrictive given the context of the class definition, which emphasizes the Sampler's role in data collection rather than limiting it to a single feature, result, sampling, or procedure.", "15": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the ontology in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nSampling,hasResult,some,Sample\nSampling,hasFeatureOfInterest,some,Sample\nSampling,madeBySampler,only,Sampler\nSampling,usedProcedure,only,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **Sampling, hasResult, some, Sample**: This restriction is retained as it accurately reflects that the outcome of sampling is a sample.\n   \n2. **Sampling, hasFeatureOfInterest, some, Sample**: This restriction is included to indicate that sampling involves a feature of interest, which is a sample.\n\n3. **Sampling, madeBySampler, only, Sampler**: This restriction is kept to emphasize that sampling is exclusively conducted by a sampler.\n\n4. **Sampling, usedProcedure, only, Procedure**: This restriction is included to ensure that each sampling operation follows a defined procedure, which is crucial for consistency and reliability in data collection. \n\nThe other candidates were either duplicates or less precise in capturing the essential relationships defined in the class hierarchy and class definitions.", "16": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Sensor\":\n\n```csv\nsubject,predicate,rtype,object\nSensor,hasFeatureOfInterest,some,FeatureOfInterest\nSensor,observes,some,ObservableProperty\nSensor,hasFeatureOfInterest,only,FeatureOfInterest\nSensor,observes,only,ObservableProperty\n```\n\n### Explanation:\n1. **hasFeatureOfInterest**: The restriction \"some\" is included because the support text indicates that a sensor is capable of observing particular properties, which aligns with the definition of having at least one feature of interest. The \"only\" restriction is also included to specify that the features of interest must be of the type FeatureOfInterest.\n\n2. **observes**: The restriction \"some\" is included to indicate that a sensor observes at least one observable property. The \"only\" restriction is also included to specify that the properties observed must be of the type ObservableProperty.\n\nThis final set of restrictions captures the essential characteristics of the Sensor class as described in the support text and aligns with the class hierarchy provided.", "17": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the class \"Stimulus.\" The final restrictions are as follows:\n\n```csv\nsubject,predicate,rtype,object\nStimulus,hasFeatureOfInterest,some,FeatureOfInterest\nStimulus,hasResult,some,Result\nStimulus,observes,some,Observation\n```\n\n### Explanation of the Final Property Restrictions:\n1. **Stimulus, hasFeatureOfInterest, some, FeatureOfInterest**: This restriction indicates that a Stimulus is linked to at least one FeatureOfInterest, which aligns with the definition that states a Stimulus is associated with specific observable properties.\n\n2. **Stimulus, hasResult, some, Result**: This restriction indicates that a Stimulus can lead to at least one Result, which is consistent with the role of Stimuli in prompting measurements and observations.\n\n3. **Stimulus, observes, some, Observation**: This restriction indicates that a Stimulus is involved in at least one Observation, reinforcing its role as a trigger for observations within a sensor network.\n\nThe other candidates were either duplicates or overly restrictive (e.g., using \"only\"), which may not accurately reflect the relationships described in the class definition.", "18": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,rtype,object\nSystem,hasDeployment,some,Deployment\nSystem,hasSubSystem,some,System\nSystem,implements,some,Procedure\n```\n\n### Explanation:\n1. **System, hasDeployment, some, Deployment**: This restriction is kept as it aligns with the class definition stating that a System encompasses Deployments.\n  \n2. **System, hasSubSystem, some, System**: This restriction is retained because the class definition indicates that a System may include SubSystems.\n\n3. **System, implements, some, Procedure**: This restriction is included as the class definition specifies that every System implements specific Procedures.\n\nThe duplicate candidates were removed, and the restrictions were simplified to reflect the necessary relationships without redundancy.", "19": "Here are the finalized property restrictions for the class `TemporalEntity` in CSV format:\n\n```csv\nsubject,predicate,rtype,object\nTemporalEntity,actsOnProperty,some,Property\nTemporalEntity,hasProperty,some,Property\nTemporalEntity,hasFeatureOfInterest,some,FeatureOfInterest\nTemporalEntity,hasResult,some,Result\nTemporalEntity,hasSample,some,Sample\nTemporalEntity,isActedOnBy,some,System\nTemporalEntity,isObservedBy,some,System\nTemporalEntity,madeBySampler,some,Sampler\nTemporalEntity,madeBySensor,some,Sensor\nTemporalEntity,madeObservation,some,Observation\nTemporalEntity,observes,some,Observation\nTemporalEntity,phenomenonTime,some,TemporalEntity\n```\n\n### Explanation of Changes:\n1. **Consolidation of Redundant Restrictions**: \n   - Removed duplicate entries for the same property restrictions that were proposed multiple times.\n   \n2. **Selection of Appropriate Cardinality**: \n   - Chose \"some\" for most restrictions as it indicates that a `TemporalEntity` can have multiple associations with the specified class, which aligns with the definition of `TemporalEntity` as encompassing various temporal aspects.\n\n3. **Removed Redundant Restrictions**: \n   - Removed restrictions that were overly restrictive (e.g., \"only\") as they may not accurately reflect the intended flexibility of `TemporalEntity` in relation to its properties and features of interest.\n\n4. **Maintained Key Relationships**: \n   - Ensured that all relevant relationships that support the understanding of `TemporalEntity` in the context of a semantic sensor network were included. \n\nThis final set of restrictions captures the essence of the `TemporalEntity` class and its interactions within the ontology.", "20": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,rtype,object\nThing,hasFeatureOfInterest,some,FeatureOfInterest\nThing,hasProperty,some,Property\nThing,hasResult,some,Result\nThing,hasSubSystem,some,System\nThing,isActedOnBy,some,Actuator\nThing,isProxyFor,some,Thing\nThing,isResultOf,some,Procedure\nThing,observes,some,Observation\nThing,usedProcedure,some,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: Retained as it is essential for representing the features relevant to the Thing class.\n2. **hasProperty**: Retained to indicate that Things can have various properties.\n3. **hasResult**: Important for linking Things to their results, especially in sensor networks.\n4. **hasSubSystem**: Indicates that Things can comprise subsystems, which is relevant for complex sensor networks.\n5. **isActedOnBy**: Important for showing the interaction between Things and Actuators.\n6. **isProxyFor**: Retained to indicate that Things can act as proxies for other entities.\n7. **isResultOf**: Important for linking Things to the procedures that yield results.\n8. **observes**: Retained to show that Things can observe various phenomena.\n9. **usedProcedure**: Indicates that Things can utilize specific procedures in their operations.\n\nThe restrictions have been simplified to avoid redundancy and ensure clarity while maintaining the integrity of the ontology.", "21": "Here are the final property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,rtype,object\nVocabulary,deployedOnPlatform,some,Platform\nVocabulary,hasFeatureOfInterest,some,FeatureOfInterest\nVocabulary,hasInput,some,Input\nVocabulary,hasOutput,some,Output\nVocabulary,hasProperty,some,Property\nVocabulary,hasResult,some,Result\nVocabulary,hasSample,some,Sample\nVocabulary,isActedOnBy,some,Actuator\nVocabulary,isHostedBy,some,Platform\nVocabulary,isProxyFor,some,System\nVocabulary,isResultOf,some,Observation\nVocabulary,madeObservation,some,Observation\nVocabulary,observes,some,ObservableProperty\nVocabulary,usedProcedure,some,Procedure\n```\n\n### Explanation of Changes:\n1. **Consolidation of Similar Candidates**: \n   - Removed duplicate entries for the same property restrictions (e.g., multiple entries for `hasFeatureOfInterest`, `hasInput`, etc.).\n   \n2. **Focus on 'some' Restrictions**: \n   - Retained only the 'some' restrictions as they are more flexible and appropriate for the Vocabulary class, which is meant to encompass a variety of terms and definitions.\n\n3. **Removed Redundant Restrictions**: \n   - Removed 'only' restrictions as they are too restrictive for the general purpose of the Vocabulary class.\n\n4. **Maintained Relevant Properties**: \n   - Ensured that all properties are relevant and supported by the class definition and support text provided.\n\nThis final output reflects a structured and coherent ontology that aligns with the intended use of the Vocabulary class in the context of sensor networks."}