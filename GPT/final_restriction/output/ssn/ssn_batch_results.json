{"0": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the `ActuatableProperty` class:\n\n```csv\nsubject,predicate,restriction type,object\nActuatableProperty,actsOnProperty,only,Property\n```\n\n### Explanation:\n1. **Acts On Property**: The restriction `ActuatableProperty, actsOnProperty, only, Property` is retained because it aligns with the definition of `ActuatableProperty`, which indicates that it is a characteristic that can be influenced or modified through specific actions. The support text emphasizes the direct relationship between the property and the action taken, which justifies the use of the \"only\" restriction to ensure that an `ActuatableProperty` is exclusively associated with properties that can be acted upon.\n\n2. **Acts On Property (some)**: The candidate `ActuatableProperty, actsOnProperty, some, Property` is not included in the final restrictions because it implies that an `ActuatableProperty` may or may not act on properties, which contradicts the definition that emphasizes the necessity of a direct relationship with properties that can be influenced.\n\nThus, the final output captures the essence of the `ActuatableProperty` class as defined in the ontology.", "1": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have finalized the property restrictions for the class \"Actuation.\" The restrictions are designed to accurately reflect the relationships and constraints as described in the support texts.\n\nHere are the final property restrictions in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nActuation,hasFeatureOfInterest,only,FeatureOfInterest\nActuation,hasProperty,only,ActuatableProperty\nActuation,hasResult,only,Result\nActuation,isResultOf,some,Procedure\nActuation,usedProcedure,only,Procedure\n```\n\n### Explanation of Final Restrictions:\n1. **hasFeatureOfInterest**: The restriction is set to \"only\" because the actuation process is closely tied to a specific feature of interest.\n2. **hasProperty**: This is also set to \"only\" to indicate that the actuation specifically influences actuatable properties.\n3. **hasResult**: This is restricted to \"only\" Result, as each actuation yields a specific result.\n4. **isResultOf**: This is set to \"some\" Procedure, indicating that an actuation can be the result of one or more procedures.\n5. **usedProcedure**: This is restricted to \"only\" Procedure, as the actuation is guided by a defined procedure.\n\nThese restrictions ensure that the ontology accurately captures the relationships and constraints associated with the Actuation class.", "2": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Actuator class in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nActuator,hasProperty,only,ActuatableProperty\nActuator,hasResult,some,Result\n```\n\n### Explanation:\n1. **Actuator, hasProperty, only, ActuatableProperty**: This restriction is retained because the definition emphasizes that an Actuator is specifically associated with properties it can influence, which aligns with the notion that it can only have properties that are of type ActuatableProperty.\n\n2. **Actuator, hasResult, some, Result**: This restriction is included as it indicates that an Actuator can produce results, which is supported by the text stating that it plays a crucial role in the operational dynamics of a system, implying it can generate results. \n\nThe other candidates (specifically those suggesting \"some\" for hasProperty and \"only\" for hasResult) were deemed unnecessary or less precise based on the definitions and support text provided.", "3": "Here are the finalized property restrictions in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nAgent,actsOnProperty,some,Thing\nAgent,deployedOnPlatform,some,Platform\nAgent,hasFeatureOfInterest,some,FeatureOfInterest\nAgent,hasInput,some,Input\nAgent,hasOutput,some,Output\nAgent,hasProperty,some,Property\nAgent,hasResult,some,Result\nAgent,hasSubSystem,some,System\nAgent,implementedBy,some,System\nAgent,isActedOnBy,some,Actuator\nAgent,isProxyFor,some,System\nAgent,madeActuation,some,Actuation\nAgent,madeObservation,some,Observation\nAgent,madeSampling,some,Sampling\nAgent,observes,some,ObservableProperty\nAgent,observes,some,Observation\n```\n\n### Explanation of Changes:\n1. **Acts on Property**: Kept as \"some\" since agents can act on various properties.\n2. **Deployed on Platform**: Changed to \"some\" to reflect that agents may be deployed on specific platforms.\n3. **Has Feature of Interest**: Changed to \"some\" to indicate that agents can have features of interest.\n4. **Has Input**: Changed to \"some\" to reflect that agents interact with their environment, implying they have inputs.\n5. **Has Output**: Changed to \"some\" to indicate that agents produce outputs based on their interactions.\n6. **Has Property**: Changed to \"some\" to reflect that agents can have various properties.\n7. **Has Result**: Changed to \"some\" to indicate that agents can produce results from their actions.\n8. **Has SubSystem**: Changed to \"some\" to reflect that agents may have associated subsystems.\n9. **Implemented By**: Changed to \"some\" to indicate that agents can be implemented by various systems.\n10. **Is Acted On By**: Changed to \"some\" to reflect that agents may be acted upon by actuators.\n11. **Is Proxy For**: Changed to \"some\" to indicate that agents can act as proxies for various systems.\n12. **Made Actuation**: Changed to \"some\" to reflect that agents can perform actuations.\n13. **Made Observation**: Changed to \"some\" to indicate that agents can create observations.\n14. **Made Sampling**: Changed to \"some\" to reflect that agents can perform sampling.\n15. **Observes**: Kept as \"some\" to indicate that agents can observe properties and observations.\n\nThis final set of property restrictions aligns with the class definition and the support text provided, ensuring that the ontology accurately represents the capabilities and roles of agents within a semantic sensor network.", "4": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have finalized the property restrictions for the Deployment class. The restrictions emphasize the relationships between Deployment, Platform, FeatureOfInterest, and Property, as well as the systems that are hosted within a deployment.\n\nHere are the final property restrictions in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nDeployment,deployedOnPlatform,only,Platform\nDeployment,hasFeatureOfInterest,only,FeatureOfInterest\nDeployment,hasProperty,only,Property\nDeployment,hosts,some,System\n```\n\n### Explanation of the Final Restrictions:\n1. **deployedOnPlatform, only, Platform**: This restriction indicates that each Deployment must be associated with exactly one Platform, aligning with the definition that emphasizes the specific arrangement of systems on designated platforms.\n  \n2. **hasFeatureOfInterest, only, FeatureOfInterest**: This restriction specifies that each Deployment must relate to exactly one FeatureOfInterest, which is crucial for understanding the tailored nature of each deployment.\n\n3. **hasProperty, only, Property**: This indicates that each Deployment must address exactly one Property, reinforcing the structured nature of sensor network configurations.\n\n4. **hosts, some, System**: This allows for a Deployment to host one or more Systems, reflecting the flexibility in how systems can be organized within a deployment. \n\nThese restrictions collectively capture the essence of the Deployment class as described in the class definition.", "5": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the ontology in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nFeatureOfInterest,hasResult,only,Sample\nFeatureOfInterest,hasSample,only,Sample\nFeatureOfInterest,hasProperty,some,Property\n```\n\n### Explanation of the Final Property Restrictions:\n1. **FeatureOfInterest, hasResult, only, Sample**: This restriction indicates that a Feature of Interest can only have results that are of type Sample, aligning with the definition that each Feature of Interest is linked to specific samples.\n\n2. **FeatureOfInterest, hasSample, only, Sample**: This restriction emphasizes that a Feature of Interest is exclusively associated with a specific sample, reinforcing the idea that it is intrinsically linked to samples.\n\n3. **FeatureOfInterest, hasProperty, some, Property**: This restriction allows for the possibility that a Feature of Interest can have some properties, which describe its characteristics and behaviors, as stated in the class definition. \n\nThe other candidates were either redundant or less precise based on the definitions provided.", "6": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the `ObservableProperty` class. Here are the final property restrictions in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nObservableProperty,hasFeatureOfInterest,only,FeatureOfInterest\nObservableProperty,hasResult,only,Result\nObservableProperty,observes,only,Sensor\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: The restriction is set to \"only\" because an `ObservableProperty` is fundamentally defined as a characteristic of a feature, which aligns with the definition that emphasizes its measurement and monitoring capabilities.\n  \n2. **hasResult**: This is also restricted to \"only\" because the definition implies that every `ObservableProperty` must have a corresponding result that reflects its measurement.\n\n3. **observes**: The restriction is set to \"only\" as well, since the definition states that `ObservableProperties` are specifically linked to sensors that observe and collect data about them.\n\nThe other candidates were either redundant or less aligned with the core definition of `ObservableProperty`, hence they were excluded from the final restrictions.", "7": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Observation\" in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nObservation,hasFeatureOfInterest,only,FeatureOfInterest\nObservation,hasResult,only,Result\nObservation,madeBySensor,only,Sensor\nObservation,observes,some,ObservableProperty\n```\n\n### Explanation:\n1. **hasFeatureOfInterest**: The restriction is set to \"only\" because the definition emphasizes that each observation focuses on a specific feature of interest.\n2. **hasResult**: This is also set to \"only\" since each observation is associated with a unique result, indicating that the result must be of type Result.\n3. **madeBySensor**: This is restricted to \"only\" as the definition states that observations are conducted by sensors.\n4. **observes**: This is set to \"some\" because while observations are linked to observable properties, it does not imply exclusivity; there could be multiple observable properties associated with an observation.\n\nThe other candidates were either redundant or did not align as closely with the definitions provided.", "8": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Output class in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nOutput,hasInput,only,Input\nOutput,hasResult,some,Result\nOutput,isResultOf,some,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **Output, hasInput, only, Input**: This restriction indicates that all outputs must be generated in response to inputs, aligning with the definition that outputs are results produced by a system's processes in response to inputs or observations.\n\n2. **Output, hasResult, some, Result**: This restriction specifies that outputs can have some results, which reflects the nature of outputs as tangible outcomes of processes.\n\n3. **Output, isResultOf, some, Procedure**: This restriction indicates that outputs can be the result of some procedures, acknowledging that outputs are generated through specific processes or actions within the system. \n\nThe other candidates were either redundant or less precise in capturing the relationships defined in the class definition.", "9": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the class \"Platform.\" The final restrictions are as follows:\n\n```csv\nsubject,predicate,restriction type,object\nPlatform,hasDeployment,only,Deployment\nPlatform,hasSubSystem,some,System\nPlatform,hosts,only,System\n```\n\n### Explanation of the Final Property Restrictions:\n1. **Platform, hasDeployment, only, Deployment**: This restriction indicates that a Platform can only have deployments that are of the type Deployment. This aligns with the definition that a Platform is always associated with a deployment context.\n\n2. **Platform, hasSubSystem, some, System**: This restriction indicates that a Platform can have some subsystems that are of the type System. This is supported by the definition that a Platform supports and integrates various systems.\n\n3. **Platform, hosts, only, System**: This restriction indicates that a Platform exclusively hosts entities that are of the type System, reinforcing the idea that it integrates various systems within its framework.\n\nThe other candidates were either redundant or less precise in capturing the essence of the Platform's role in the sensor network.", "10": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Procedure\":\n\n```csv\nsubject,predicate,restriction type,object\nProcedure,hasInput,only,Input\nProcedure,hasOutput,only,Output\nProcedure,hasSubSystem,some,System\nProcedure,implementedBy,only,System\n```\n\n### Explanation of Final Property Restrictions:\n1. **Procedure, hasInput, only, Input**: This restriction indicates that a Procedure must exclusively have inputs of type Input, aligning with the definition that emphasizes reliance on defined inputs.\n  \n2. **Procedure, hasOutput, only, Output**: Similar to the input restriction, this ensures that a Procedure exclusively produces outputs of type Output, reinforcing the structured nature of Procedures.\n\n3. **Procedure, hasSubSystem, some, System**: This allows for the possibility that a Procedure can have some subsystems, which is consistent with the idea that Procedures may involve multiple systems working together.\n\n4. **Procedure, implementedBy, only, System**: This restriction states that a Procedure is exclusively implemented by a System, which reflects the definition that each Procedure is executed by a designated system.\n\nThe other candidates were either redundant or less strict than the chosen restrictions, which align closely with the definition provided.", "11": "Here are the finalized property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,restriction type,object\nProperty,hasFeatureOfInterest,only,FeatureOfInterest\nProperty,hasResult,only,Result\nProperty,isPropertyOf,only,Thing\nProperty,isProxyFor,some,Thing\n```\n\n### Explanation of Final Restrictions:\n1. **Property, hasFeatureOfInterest, only, FeatureOfInterest**: This restriction is maintained because the definition emphasizes that properties are uniquely tied to a feature of interest.\n  \n2. **Property, hasResult, only, Result**: This restriction is included as properties are expected to be associated with specific results.\n\n3. **Property, isPropertyOf, only, Thing**: This restriction is retained since properties can be associated with various entities classified under Thing.\n\n4. **Property, isProxyFor, some, Thing**: This restriction is added to allow flexibility in associating properties with various entities, acknowledging that properties can represent aspects of different things. \n\nThe other candidates were either redundant or not aligned with the core definitions provided.", "12": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Result class in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nResult,hasFeatureOfInterest,only,FeatureOfInterest\nResult,hasProperty,some,ObservableProperty\nResult,isProxyFor,some,Observation\nResult,isResultOf,some,Observation\n```\n\n### Explanation of Final Restrictions:\n1. **Result, hasFeatureOfInterest, only, FeatureOfInterest**: This restriction indicates that a Result can only have features of interest, which aligns with the definition that results reflect the state or condition of a particular feature of interest.\n\n2. **Result, hasProperty, some, ObservableProperty**: This restriction allows for the Result to have some properties that are observable, which is consistent with the nature of results derived from observations.\n\n3. **Result, isProxyFor, some, Observation**: This indicates that a Result can act as a proxy for some Observations, which is relevant as results are outcomes derived from observations.\n\n4. **Result, isResultOf, some, Observation**: This restriction confirms that a Result is derived from some Observations, reinforcing the connection between results and the observations that lead to them. \n\nThe other candidates were either redundant or not necessary based on the definitions provided.", "13": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined and finalized the property restrictions for the class \"Sample\". The final restrictions are as follows:\n\n```csv\nsubject,predicate,restriction type,object\nSample,hasFeatureOfInterest,only,FeatureOfInterest\nSample,hasInput,some,Input\nSample,hasOutput,some,Output\nSample,hasResult,some,Result\nSample,hasProperty,some,Property\nSample,isResultOf,only,Sampling\nSample,isSampleOf,only,FeatureOfInterest\nSample,madeBySampler,some,Sampler\nSample,madeBySensor,some,Sensor\nSample,madeByActuator,some,Actuator\nSample,madeObservation,some,Observation\nSample,observes,some,Observation\nSample,isObservedBy,some,Sensor\nSample,isActedOnBy,some,Actuator\nSample,isProxyFor,some,FeatureOfInterest\n```\n\n### Explanation of Changes:\n1. **hasFeatureOfInterest**: Kept as \"only\" since a Sample is specifically a representation of a Feature of Interest.\n2. **hasInput**: Changed to \"some\" to indicate that a Sample can have one or more inputs.\n3. **hasOutput**: Changed to \"some\" to indicate that a Sample can have one or more outputs.\n4. **hasResult**: Changed to \"some\" to indicate that a Sample can have one or more results.\n5. **hasProperty**: Changed to \"some\" to indicate that a Sample can have one or more properties.\n6. **isResultOf**: Kept as \"only\" since a Sample is uniquely associated with the act of Sampling.\n7. **isSampleOf**: Kept as \"only\" since a Sample is a representation of a Feature of Interest.\n8. **madeBySampler**, **madeBySensor**, **madeByActuator**: Changed to \"some\" to indicate that a Sample can be produced by one or more of these entities.\n9. **madeObservation**: Changed to \"some\" to indicate that a Sample can be associated with one or more observations.\n10. **observes**: Changed to \"some\" to indicate that a Sample can observe one or more phenomena.\n11. **isObservedBy**: Changed to \"some\" to indicate that a Sample can be observed by one or more sensors.\n12. **isActedOnBy**: Changed to \"some\" to indicate that a Sample can be acted upon by one or more actuators.\n13. **isProxyFor**: Changed to \"some\" to indicate that a Sample can act as a proxy for one or more Features of Interest.\n\nThis final set of restrictions reflects the relationships and characteristics of the Sample class as described in the provided definitions and support texts.", "14": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the class \"Sampler.\" The final property restrictions are as follows:\n\n```csv\nsubject,predicate,restriction type,object\nSampler,hasFeatureOfInterest,only,FeatureOfInterest\nSampler,hasResult,some,Result\nSampler,madeSampling,only,Sampling\nSampler,usedProcedure,only,Procedure\n```\n\n### Explanation of the Final Property Restrictions:\n1. **hasFeatureOfInterest**: The restriction is set to \"only\" because the definition emphasizes that a Sampler is designed to collect data from a specific feature of interest, indicating exclusivity.\n  \n2. **hasResult**: The restriction is set to \"some\" because while a Sampler is involved in sampling, it is implied that it produces results related to its activities, but it does not necessarily have to be limited to only one type of result.\n\n3. **madeSampling**: The restriction is set to \"only\" because the definition states that Samplers are exclusively involved in sampling processes, indicating that all operations they conduct are related to making samplings.\n\n4. **usedProcedure**: The restriction is set to \"only\" because the definition indicates that Samplers engage in sampling activities that adhere to defined protocols or methods, suggesting that they use specific procedures exclusively for their operations. \n\nThis final set of restrictions captures the essence of the Sampler's role in the context of data collection and analysis within sensor networks.", "15": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the class \"Sampling.\" The restrictions have been refined to ensure clarity and correctness based on the definitions and support text.\n\n```csv\nsubject,predicate,restriction type,object\nSampling,hasFeatureOfInterest,some,Sample\nSampling,hasResult,only,Sample\nSampling,isResultOf,some,Procedure\nSampling,madeBySampler,only,Sampler\nSampling,usedProcedure,only,Procedure\n```\n\n### Explanation of Final Property Restrictions:\n1. **hasFeatureOfInterest**: This restriction is kept as \"some\" because the sampling process is defined to collect data from a specific feature of interest, which is a sample.\n2. **hasResult**: This restriction is set to \"only\" because the outcome of the sampling process is exclusively a sample.\n3. **isResultOf**: This restriction is maintained as \"some\" to indicate that sampling is a result of a procedure.\n4. **madeBySampler**: This restriction is set to \"only\" to emphasize that the sampling process is exclusively conducted by a sampler.\n5. **usedProcedure**: This restriction is also set to \"only\" to reflect that each sampling operation follows a defined procedure.\n\nThe other candidates were either redundant or less precise and were therefore omitted.", "16": "Based on the provided class hierarchy, class definitions, and property restriction candidates, the final property restrictions for the class \"Sensor\" are as follows:\n\n```csv\nsubject,predicate,restriction type,object\nSensor,hasFeatureOfInterest,some,FeatureOfInterest\nSensor,observes,some,ObservableProperty\n```\n\n### Explanation:\n1. **hasFeatureOfInterest**: The restriction is set to \"some\" because while a sensor is capable of observing particular properties, it is not strictly limited to only one type of feature of interest. Therefore, it can have multiple features of interest.\n  \n2. **observes**: Similarly, the restriction is set to \"some\" for observable properties, as a sensor can observe various properties and is not limited to a single type. \n\nThe other candidates that suggested \"only\" were not included because they imply a stricter limitation that does not align with the general functionality of sensors as described in the class definition.", "17": "Based on the class hierarchy, class definitions, and the provided property restriction candidates along with their support texts, I have finalized the property restrictions for the class \"Stimulus.\" The final restrictions are as follows:\n\n```csv\nsubject,predicate,restriction type,object\nStimulus,hasFeatureOfInterest,only,FeatureOfInterest\nStimulus,hasResult,some,Result\nStimulus,observes,some,Observation\n```\n\n### Explanation of Final Restrictions:\n1. **Stimulus, hasFeatureOfInterest, only, FeatureOfInterest**: This restriction is retained as it emphasizes that a stimulus must be linked to specific features of interest, aligning with the definition provided.\n  \n2. **Stimulus, hasResult, some, Result**: This restriction is modified from \"only\" to \"some\" to indicate that a stimulus can have one or more results, which is more flexible and aligns with the understanding that stimuli can trigger various observations.\n\n3. **Stimulus, observes, some, Observation**: This restriction is also modified from \"only\" to \"some\" to reflect that a stimulus can be associated with multiple observations, allowing for a broader interpretation of its role in the sensor network.\n\nThese restrictions ensure that the ontology accurately represents the relationships and characteristics of the \"Stimulus\" class within the context of the sensor network.", "18": "Here are the final property restrictions based on the provided class hierarchy, class definitions, and property restriction candidates:\n\n```csv\nsubject,predicate,restriction type,object\nSystem,hasDeployment,only,Deployment\nSystem,hasDeployment,some,Deployment\nSystem,hasSubSystem,only,System\nSystem,hasSubSystem,some,System\nSystem,implements,only,Procedure\nSystem,implements,some,Procedure\n```\n\n### Explanation:\n1. **hasDeployment**: Both restrictions (only and some) are included because the class definition supports the idea that a System must have at least one Deployment.\n2. **hasSubSystem**: Both restrictions (only and some) are included as the class definition indicates that a System may include SubSystems, allowing for the possibility of having none or more.\n3. **implements**: Both restrictions (only and some) are included because the class definition states that every System implements specific Procedures, thus requiring at least one Procedure while also allowing for the possibility of implementing only Procedures.", "19": "Based on the provided class hierarchy, class definitions, and property restriction candidates, I have refined the property restrictions for the class `TemporalEntity`. Here are the final property restrictions in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nTemporalEntity,hasFeatureOfInterest,only,FeatureOfInterest\nTemporalEntity,hasProperty,some,Property\nTemporalEntity,hasResult,only,Result\nTemporalEntity,hasSample,some,Sample\nTemporalEntity,isActedOnBy,some,System\nTemporalEntity,isObservedBy,some,System\nTemporalEntity,isProxyFor,some,TemporalEntity\nTemporalEntity,madeBySampler,some,Sampler\nTemporalEntity,madeBySensor,some,Sensor\nTemporalEntity,madeObservation,some,Observation\nTemporalEntity,observes,some,Observation\nTemporalEntity,phenomenonTime,some,TemporalEntity\n```\n\n### Explanation of Changes:\n1. **hasFeatureOfInterest**: Kept as \"only\" since it is essential for a `TemporalEntity` to have a feature of interest.\n2. **hasProperty**: Changed to \"some\" to indicate that a `TemporalEntity` can possess properties but is not limited to only one type.\n3. **hasResult**: Kept as \"only\" to ensure that the results are strictly of the type `Result`.\n4. **hasSample**: Changed to \"some\" to allow for flexibility in the relationship with samples.\n5. **isActedOnBy**: Kept as \"some\" to indicate that a `TemporalEntity` can be influenced by various systems.\n6. **isObservedBy**: Changed to \"some\" to reflect that a `TemporalEntity` can be observed by different systems.\n7. **isProxyFor**: Changed to \"some\" to allow for the possibility of a `TemporalEntity` representing other temporal entities.\n8. **madeBySampler**: Changed to \"some\" to indicate that a `TemporalEntity` can be associated with multiple samplers.\n9. **madeBySensor**: Changed to \"some\" to indicate that a `TemporalEntity` can be associated with multiple sensors.\n10. **madeObservation**: Changed to \"some\" to reflect that a `TemporalEntity` can be involved in multiple observations.\n11. **observes**: Changed to \"some\" to indicate that a `TemporalEntity` can observe multiple observations.\n12. **phenomenonTime**: Changed to \"some\" to allow for the representation of various temporal phenomena.\n\nThis final set of property restrictions provides a comprehensive and flexible framework for the `TemporalEntity` class within the ontology.", "20": "Based on the provided class hierarchy, class definitions, and property restriction candidates, here are the finalized property restrictions for the Thing class in CSV format:\n\n```csv\nsubject,predicate,restriction type,object\nThing,hasFeatureOfInterest,some,FeatureOfInterest\nThing,hasProperty,some,Property\nThing,hasResult,some,Result\nThing,hasSubSystem,some,System\nThing,isActedOnBy,some,Actuator\nThing,isResultOf,some,Procedure\nThing,observes,some,Observation\nThing,usedProcedure,some,Procedure\n```\n\nThese restrictions reflect the relationships and properties that are relevant to the Thing class within the semantic sensor network ontology, ensuring a comprehensive representation of its role in the system.", "21": "Here are the finalized property restrictions for the Vocabulary class, formatted in CSV:\n\n```csv\nsubject,predicate,restriction type,object\nVocabulary,deployedOnPlatform,only,Platform\nVocabulary,hasFeatureOfInterest,only,FeatureOfInterest\nVocabulary,hasInput,only,Input\nVocabulary,hasOutput,only,Output\nVocabulary,hasProperty,only,Property\nVocabulary,hasResult,only,Result\nVocabulary,hasSample,only,Sample\nVocabulary,isActedOnBy,only,Actuator\nVocabulary,isHostedBy,only,Platform\nVocabulary,isProxyFor,only,System\nVocabulary,madeObservation,only,Observation\nVocabulary,usedProcedure,only,Procedure\n```\n\n### Explanation of Changes:\n1. **Removed Redundant Candidates**: Candidates that suggested \"some\" restrictions were removed in favor of \"only\" restrictions, which provide a clearer and more stringent definition of the relationships.\n2. **Consolidated Definitions**: The restrictions were consolidated to ensure that each property is clearly defined as only relating to the specified class, which aligns with the purpose of the Vocabulary class as a structured set of terms.\n3. **Maintained Relevance**: All restrictions are relevant to the class definition provided, ensuring that they enhance the understanding and communication of concepts within the domain of sensor networks. \n\nThis final set of restrictions captures the essence of the Vocabulary class and its relationships within the ontology."}