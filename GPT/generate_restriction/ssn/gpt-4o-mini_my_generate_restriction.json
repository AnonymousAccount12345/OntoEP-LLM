{
  "Thing": "Thing, hasResult, some, Result / support sentence: (The Thing class encompasses a wide range of entities and concepts relevant to sensor networks, including various components such as sensors, actuators, properties, and observations, all of which play critical roles in the functioning of a sensor network. Each instance of Thing may represent physical or abstract entities that contribute to the overall system's ability to monitor, control, and interact with the environment.)\n\nThing, observes, some, Observation / support sentence: (The Thing class serves as a foundational category within the semantic sensor network ontology, encompassing a wide range of entities and concepts relevant to sensor networks, which includes observations that are critical for monitoring and interacting with the environment.)\n\nThing, hasFeatureOfInterest, some, FeatureOfInterest / support sentence: (The diversity within the Thing class allows for a comprehensive representation of all elements involved in sensing and actuation processes, which includes features of interest that are essential for effective monitoring and control.)\n\nThing, isActedOnBy, some, Actuator / support sentence: (The Thing class includes various components such as sensors and actuators, indicating that instances of Thing may be acted upon by actuators as part of the sensor network's functioning.)\n\nThing, isProxyFor, some, Thing / support sentence: (The Thing class serves as a foundational category, suggesting that instances may act as proxies for other entities within the sensor network.)\n\nThing, isResultOf, some, Procedure / support sentence: (The Thing class encompasses various components relevant to sensor networks, which may include procedures that result in specific outcomes or results.)\n\nThing, usedProcedure, some, Procedure / support sentence: (The Thing class includes various components that play critical roles in the functioning of a sensor network, which may involve the use of specific procedures.)\n\nThing, hasSubSystem, some, System / support sentence: (The Thing class allows for a comprehensive representation of all elements involved in sensing and actuation processes, which may include subsystems that contribute to the overall functionality of the sensor network.)\n\nThing, hasProperty, some, Property / support sentence: (The Thing class encompasses a wide range of entities and concepts relevant to sensor networks, including properties that are essential for the operation of sensors and actuators.)",
  "Sensor": "Sensor, observes, someValuesFrom, ObservableProperty / support sentence: (A Sensor is capable of observing particular properties, which define the characteristics it monitors.)\n\nSensor, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (A Sensor plays a crucial role in gathering information about various stimuli, contributing to a deeper understanding of the surrounding environment.)",
  "Vocabulary": "Vocabulary, hasFeatureOfInterest, some, FeatureOfInterest / support sentence: (The Vocabulary class provides a standardized language for describing properties, features, and other entities associated with sensor networks.) \n\nVocabulary, hasProperty, some, Property / support sentence: (The Vocabulary class enhances interoperability and data sharing among different components of the semantic sensor network.) \n\nVocabulary, hasResult, some, Result / support sentence: (The Vocabulary class serves as a structured set of terms and definitions that facilitate the understanding and communication of concepts within a specific domain.) \n\nVocabulary, observes, some, ObservableProperty / support sentence: (The Vocabulary class is fundamental for ensuring consistency and clarity when interpreting data and observations generated by various systems and sensors.) \n\nVocabulary, isActedOnBy, some, Actuator / support sentence: (By establishing a common lexicon, the Vocabulary class enhances interoperability and data sharing among different components of the semantic sensor network.) \n\nVocabulary, isProxyFor, some, System / support sentence: (The Vocabulary class serves as a structured set of terms and definitions that facilitate the understanding and communication of concepts within a specific domain.) \n\nVocabulary, isResultOf, some, Observation / support sentence: (The Vocabulary class is fundamental for ensuring consistency and clarity when interpreting data and observations generated by various systems and sensors.) \n\nVocabulary, usedProcedure, some, Procedure / support sentence: (The Vocabulary class provides a standardized language for describing properties, features, and other entities associated with sensor networks.) \n\nVocabulary, hasSample, some, Sample / support sentence: (The Vocabulary class enhances interoperability and data sharing among different components of the semantic sensor network.) \n\nVocabulary, madeObservation, some, Observation / support sentence: (The Vocabulary class serves as a structured set of terms and definitions that facilitate the understanding and communication of concepts within a specific domain.) \n\nVocabulary, hasInput, some, Input / support sentence: (The Vocabulary class is fundamental for ensuring consistency and clarity when interpreting data and observations generated by various systems and sensors.) \n\nVocabulary, hasOutput, some, Output / support sentence: (By establishing a common lexicon, the Vocabulary class enhances interoperability and data sharing among different components of the semantic sensor network.) \n\nVocabulary, isHostedBy, some, Platform / support sentence: (The Vocabulary class serves as a structured set of terms and definitions that facilitate the understanding and communication of concepts within a specific domain.) \n\nVocabulary, deployedOnPlatform, some, Platform / support sentence: (The Vocabulary class enhances interoperability and data sharing among different components of the semantic sensor",
  "Result": "Result, hasFeatureOfInterest, some, FeatureOfInterest / support sentence: (The Result class encapsulates the data generated as a consequence of various interactions with the environment, often reflecting the state or condition of a particular feature of interest.)\n\nResult, isResultOf, some, Observation / support sentence: (Results are essential for understanding the implications of sensor readings and can inform subsequent actions or decisions, indicating that they are outcomes derived from observations.)\n\nResult, observedProperty, some, ObservableProperty / support sentence: (The outcomes or findings obtained from observations or measurements taken in a semantic sensor network often reflect the state or condition of a particular feature of interest, which is typically linked to observable properties.)",
  "Property": "Property, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (Each property is uniquely tied to a feature, ensuring that it describes only that particular aspect or quality.) \n\nProperty, hasResult, someValuesFrom, Result / support sentence: (Properties enable the differentiation and specification of features, facilitating effective data interpretation and analysis.) \n\nProperty, isPropertyOf, someValuesFrom, Thing / support sentence: (This class serves as a foundational element in defining the various measurable or describable aspects of the entities within a semantic sensor network.)",
  "Sampling": "Sampling, hasResult, some, Sample / support sentence: (The outcome of sampling is a sample that reflects the observations made during the process.)\n\nSampling, madeBySampler, only, Sampler / support sentence: (This process is exclusively conducted by a sampler, which is responsible for carrying out the sampling activities.)\n\nSampling, usedProcedure, some, Procedure / support sentence: (Each sampling operation follows a defined procedure to ensure consistency and reliability in the data collection.)",
  "Deployment": "Deployment, deployedOnPlatform, someValuesFrom, Platform / support sentence: (The Deployment class represents a specific arrangement where a system is installed or utilized on a designated platform.) \n\nDeployment, actsOnProperty, someValuesFrom, Property / support sentence: (Each deployment is tailored to a particular property, ensuring that the system operates within defined parameters.) \n\nDeployment, hosts, someValuesFrom, System / support sentence: (This class encapsulates the relationship between the system, the platform it operates on, and the property it addresses.) \n\nDeployment, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (Through this class, one can understand how various components are systematically organized to achieve functional outcomes in a sensor network environment.)",
  "System": "System, hasDeployment, someValuesFrom, Deployment / support sentence: (The description states that \"It encompasses Deployments, which define how the System is executed,\" indicating that a System must have at least one Deployment associated with it.)\n\nSystem, hasSubSystem, someValuesFrom, System / support sentence: (The class description mentions that \"may include SubSystems that work collaboratively,\" suggesting that a System can have one or more SubSystems.)\n\nSystem, implements, someValuesFrom, Procedure / support sentence: (The description notes that \"every System implements specific Procedures that guide its operations and functionalities,\" indicating that a System must implement at least one Procedure.)",
  "Agent": "Agent, hasResult, someValuesFrom, Result / support sentence: (An Agent is capable of interacting with their environment and can be responsible for carrying out tasks or operations based on certain conditions or stimuli, which often leads to a Result.) \n\nAgent, observes, someValuesFrom, ObservableProperty / support sentence: (Agents are capable of interacting with their environment, which includes observing properties of that environment.) \n\nAgent, actsOnProperty, someValuesFrom, Property / support sentence: (An Agent can act or make decisions within a system, which implies that it can act on various properties within that system.) \n\nAgent, isActedOnBy, someValuesFrom, Actuator / support sentence: (Agents may operate independently or in coordination with other agents, which can include being acted upon by actuators in the system.) \n\nAgent, isProxyFor, someValuesFrom, System / support sentence: (Agents often represent a specific role or function within a system, indicating that they can act as proxies for various systems.) \n\nAgent, hasSubSystem, someValuesFrom, System / support sentence: (Agents contribute to the overall functionality of the system, which may involve having subsystems associated with them.) \n\nAgent, deployedOnPlatform, someValuesFrom, Platform / support sentence: (The architecture of a semantic sensor network suggests that Agents may be deployed on specific platforms.) \n\nAgent, implementedBy, someValuesFrom, System / support sentence: (Agents serve as foundational components in the architecture of a semantic sensor network, indicating they can be implemented by various systems.) \n\nAgent, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (Agents can be responsible for carrying out tasks or operations, which may involve features of interest within their environment.) \n\nAgent, hasInput, someValuesFrom, Input / support sentence: (Agents interact with their environment, which implies they can have inputs that influence their actions.) \n\nAgent, hasOutput, someValuesFrom, Output / support sentence: (As agents carry out tasks or operations, they are likely to produce outputs based on their interactions.) \n\nAgent, madeObservation, someValuesFrom, Observation / support sentence: (Agents are capable of observing their environment, which leads to the creation of observations.) \n\nAgent, madeActuation, someValuesFrom, Actuation / support sentence: (Agents can carry out tasks or operations, which may include making actuations in response to stimuli.) \n\nAgent, madeSampling, someValuesFrom, Sampling / support sentence: (Agents may",
  "Input": "Input, hasResult, some(someValuesFrom) Result / support sentence: (The Input class represents the data or signals that are received by a system or device, serving as a crucial component in the process of observation or actuation.) \n\nInput, hasInput, only(AllvaluesFrom) Input / support sentence: (Inputs can originate from various sources, including sensors or user interactions, and are essential for the functioning of systems that rely on data to operate.) \n\nInput, hasOutput, some(someValuesFrom) Output / support sentence: (Overall, Inputs are vital for enabling systems to respond accurately to their environments or user commands.)",
  "FeatureOfInterest": "FeatureOfInterest, hasSample, only, Sample / support sentence: (each Feature of Interest is associated exclusively with a specific sample that provides data about it.)  \nFeatureOfInterest, hasProperty, some, Property / support sentence: (every Feature of Interest is defined by its properties, which describe its characteristics and behaviors in the context of observation or measurement.)",
  "ObservableProperty": "ObservableProperty, observes, someValuesFrom, Sensor / support sentence: (This property is specifically linked to sensors, which are responsible for observing and collecting data about it.) \n\nObservableProperty, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (ObservableProperties serve as key indicators within a system, providing valuable insights into the state or condition of the features they represent.) \n\nObservableProperty, hasResult, someValuesFrom, Result / support sentence: (Their measurements are essential for understanding and analyzing various phenomena in the environment.)",
  "Output": "Output, hasResult, someValuesFrom, Result / support sentence: (The Output class represents the results produced by a system's processes, typically generated as a response to an input or observation.)\n\nOutput, hasInput, someValuesFrom, Input / support sentence: (The Output class represents the results produced by a system's processes, typically generated as a response to an input or observation.)\n\nOutput, isResultOf, someValuesFrom, Procedure / support sentence: (Outputs may result from the operation of sensors, actuators, or sampling devices, reflecting the state or changes in the environment.)",
  "Sampler": "Sampler, hasResult, someValuesFrom, Result / support sentence: (Samplers are essential components in the broader context of data collection and analysis within sensor networks, which implies that they produce results related to their sampling activities.)\n\nSampler, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (A Sampler is designed to collect data from a specific feature of interest, indicating that it must have a feature of interest associated with its sampling activities.)\n\nSampler, usedProcedure, someValuesFrom, Procedure / support sentence: (It performs this function by engaging in sampling activities that adhere to defined protocols or methods, suggesting that a Sampler uses specific procedures for its operations.)\n\nSampler, madeSampling, someValuesFrom, Sampling / support sentence: (This class is characterized by its exclusive involvement in sampling processes, indicating that it is involved in making samplings.)",
  "Actuation": "Actuation, hasResult, someValuesFrom, Result / support sentence: (Each actuation yields a specific result, reflecting the outcome of the interaction between the actuator and the property it acts upon.)\n\nActuation, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (This process is closely tied to a particular feature of interest, which is the focus of the actuation.)\n\nActuation, usedProcedure, someValuesFrom, Procedure / support sentence: (The actuation is guided by a defined procedure that outlines the steps necessary to achieve the intended outcome.)\n\nActuation, actsOnProperty, someValuesFrom, ActuatableProperty / support sentence: (Actuation refers to the process by which an actuator exerts influence on a specific property, typically an actuatable property, to achieve a desired effect.)",
  "Procedure": "Procedure, hasInput, some, Input / support sentence: (A Procedure refers to a structured set of actions or steps designed to achieve a specific outcome. It is characterized by its exclusive reliance on defined inputs and outputs...)\n\nProcedure, hasOutput, some, Output / support sentence: (...ensuring that the process is clearly delineated and reproducible. Additionally, each Procedure is executed by a designated system...)\n\nProcedure, implementedBy, some, System / support sentence: (...each Procedure is executed by a designated system, which embodies the necessary capabilities to carry out the prescribed actions.)",
  "TemporalEntity": "TemporalEntity, hasResult, someValuesFrom, Result / support sentence: (TemporalEntities provide a framework for understanding the timing and duration of activities or measurements, which can result in various outcomes represented by the Result class.) \n\nTemporalEntity, observes, someValuesFrom, Observation / support sentence: (TemporalEntities encompass various temporal aspects that can be associated with observations, indicating a relationship with the Observation class.) \n\nTemporalEntity, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (TemporalEntities can be associated with features of interest, which are represented in the FeatureOfInterest class.) \n\nTemporalEntity, isActedOnBy, someValuesFrom, System / support sentence: (TemporalEntities may be influenced or acted upon by systems, which include various types of agents such as Actuators, Samplers, and Sensors.) \n\nTemporalEntity, isProxyFor, someValuesFrom, TemporalEntity / support sentence: (The concept of a TemporalEntity can be represented through proxies, which are also classified as TemporalEntities.) \n\nTemporalEntity, hasSample, someValuesFrom, Sample / support sentence: (TemporalEntities can be linked to samples, which are represented in the Sample class, indicating a relationship with specific instances of observation.) \n\nTemporalEntity, madeObservation, someValuesFrom, Observation / support sentence: (TemporalEntities are integral to the process of making observations, which are captured in the Observation class.) \n\nTemporalEntity, phenomenonTime, someValuesFrom, TemporalEntity / support sentence: (The timing of phenomena is a critical aspect of TemporalEntities, indicating a relationship with other TemporalEntities.) \n\nTemporalEntity, hasProperty, someValuesFrom, Property / support sentence: (TemporalEntities can possess properties that are defined within the Property class, indicating their characteristics and attributes.) \n\nTemporalEntity, actsOnProperty, someValuesFrom, Property / support sentence: (TemporalEntities may interact with or influence properties, which are defined in the Property class.) \n\nTemporalEntity, isObservedBy, someValuesFrom, System / support sentence: (TemporalEntities can be observed by various systems, including Sensors and Samplers, which are part of the System class.) \n\nTemporalEntity, madeBySensor, someValuesFrom, Sensor / support sentence: (TemporalEntities can be generated or measured by sensors, which are classified under the System class.) \n\nTemporalEntity, madeBySampler, someValuesFrom, Sampler / support sentence: (TemporalEntities can also be associated with samplers, which are part of the System class.)",
  "Sample": "Sample, hasResult, someValuesFrom, Result / support sentence: (A Sample is a representation of a specific instance of a Feature of Interest, often collected during a Sampling procedure. Each Sample is uniquely associated with the act of Sampling that produced it, ensuring that it reflects the conditions or characteristics of the Feature being observed.) \n\nSample, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (A Sample is a representation of a specific instance of a Feature of Interest, often collected during a Sampling procedure.) \n\nSample, isResultOf, someValuesFrom, Sampling / support sentence: (Each Sample is uniquely associated with the act of Sampling that produced it, ensuring that it reflects the conditions or characteristics of the Feature being observed.) \n\nSample, madeBySampler, someValuesFrom, Sampler / support sentence: (Each Sample is uniquely associated with the act of Sampling that produced it, ensuring that it reflects the conditions or characteristics of the Feature being observed.) \n\nSample, madeObservation, someValuesFrom, Observation / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, hasInput, someValuesFrom, Input / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, hasOutput, someValuesFrom, Output / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, forProperty, someValuesFrom, Property / support sentence: (This relationship emphasizes the importance of context and methodology in the interpretation of the Sample.) \n\nSample, actsOnProperty, someValuesFrom, Property / support sentence: (This relationship emphasizes the importance of context and methodology in the interpretation of the Sample.) \n\nSample, isObservedBy, someValuesFrom, Sensor / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, isSampleOf, someValuesFrom, FeatureOfInterest / support sentence: (A Sample is a representation of a specific instance of a Feature of Interest, often collected during a Sampling procedure.) \n\nSample, madeBySensor, someValuesFrom, Sensor / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, madeByActuator, someValuesFrom, Actuator / support sentence: (Samples serve as crucial data points in the analysis and understanding of various phenomena.) \n\nSample, hasProperty, someValuesFrom, Property / support sentence: (This",
  "Observation": "Observation, hasResult, someValuesFrom, Result / support sentence: (Each observation is associated with a unique result that reflects the data gathered during the observation process.)\n\nObservation, observes, someValuesFrom, ObservableProperty / support sentence: (It is linked to a specific observable property, following a defined procedure, and is often triggered by a stimulus.)\n\nObservation, hasFeatureOfInterest, someValuesFrom, FeatureOfInterest / support sentence: (Each observation is associated with a unique result that reflects the data gathered during the observation process, focusing on a particular feature of interest.)\n\nObservation, madeBySensor, someValuesFrom, Sensor / support sentence: (It is conducted by a sensor and is linked to a specific observable property, following a defined procedure, and is often triggered by a stimulus.)",
  "ActuatableProperty": "ActuatableProperty, actsOnProperty, someValuesFrom, Property / support sentence: (An ActuatableProperty refers to a characteristic or attribute of a system that can be influenced or modified through a specific action, indicating a clear relationship between the property and the action taken.)",
  "Actuator": "Actuator, actsOnProperty, some, ActuatableProperty / support sentence: (An Actuator is associated with a specific type of property that it can influence, ensuring that its functionality is aligned with the properties it is intended to actuate.)\n\nActuator, hasResult, some, Result / support sentence: (An Actuator plays a crucial role in the operational dynamics of a system, enabling precise control over various actuatable properties, which implies it can produce results.)",
  "Stimulus": "Stimulus, hasFeatureOfInterest, some, FeatureOfInterest / support sentence: (A Stimulus is intrinsically linked to specific observable properties, ensuring that each stimulus is associated with a defined aspect of interest in the surrounding environment.)\n\nStimulus, observes, some, Observation / support sentence: (This connection allows for the meaningful interpretation of data collected in response to the stimulus.)\n\nStimulus, hasResult, some, Result / support sentence: (Stimuli play a vital role in enhancing the understanding of dynamic conditions by prompting relevant measurements.)",
  "Platform": "Platform, hosts, some, System / support sentence: (A Platform exclusively hosts systems, ensuring that only compatible entities operate within its framework.)\n\nPlatform, hasDeployment, some, Deployment / support sentence: (Additionally, a Platform is always associated with a deployment context, indicating its specific operational environment.)"
}